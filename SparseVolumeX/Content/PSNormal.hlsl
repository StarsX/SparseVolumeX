//--------------------------------------------------------------------------------------
// By XU, Tianchen
//--------------------------------------------------------------------------------------

#include "SharedConst.h"

//--------------------------------------------------------------------------------------
// Struct
//--------------------------------------------------------------------------------------
struct PSIn
{
	float4	Pos		: SV_POSITION;
	float3	WSPos	: POSWORLD;
	float3	Nrm		: NORMAL;
};

//--------------------------------------------------------------------------------------
// Unordered access textures
//--------------------------------------------------------------------------------------
RWTexture2DArray<min16float4>	g_rwKBufNorm;

//--------------------------------------------------------------------------------------
// Texture
//--------------------------------------------------------------------------------------
Texture2DArray<uint>			g_txKBufDepth;

//--------------------------------------------------------------------------------------
// Render normals
//--------------------------------------------------------------------------------------
[earlydepthstencil]
void main(PSIn input)
{
	const uint2 vLoc = input.Pos.xy;
	const uint uDepth = asuint(input.Pos.z);

	for (uint i = 0; i < NUM_K_LAYERS; ++i)
	{
		const uint3 vTex = { vLoc, i };

		if (g_txKBufDepth[vTex] == uDepth)
			g_rwKBufNorm[vTex] = min16float4(normalize(input.Nrm), 1.0);
	}
}
